/*
 * SonarQube
 * Copyright (C) 2009-2025 SonarSource SA
 * mailto:info AT sonarsource DOT com
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */
package org.sonar.db.sca;

import java.math.BigDecimal;
import java.util.List;
import javax.annotation.Nullable;

/**
 * This table has GLOBAL rows spanning all analysis runs. It represents
 * extra fields on all rows of sca_issues that are of {@link ScaIssueType#VULNERABILITY},
 * in other words it's a polymorphic child class of sca_issues.
 * <p>
 *   The uuid primary key will match the primary key of the corresponding row in the sca_issues table.
 * </p>
 * <p>
 *   The base severity does not consider project-specific considerations such as reachability.
 * </p>
 * <p>
 *   At least in the current take, this table does not contain all attributes of a given
 *   vulnerability; it only contains those that we show in a list of issues, but not those
 *   that appear when we show full details of a vulnerability. The columns in this table
 *   need to be returned by the cloud endpoint that analyzes dependency files.
 * </p>
 */
public record ScaVulnerabilityIssueDto(
  String uuid,
  ScaSeverity baseSeverity,
  List<String> cweIds,
  @Nullable BigDecimal cvssScore,
  long createdAt,
  long updatedAt) {

  // these need to match what's in the db
  public static final int CWE_IDS_MAX_LENGTH = 255;

  public Builder toBuilder() {
    return new Builder()
      .setUuid(uuid)
      .setBaseSeverity(baseSeverity)
      .setCweIds(cweIds)
      .setCvssScore(cvssScore)
      .setCreatedAt(createdAt)
      .setUpdatedAt(updatedAt);
  }

  public static class Builder {
    private String uuid;
    private ScaSeverity baseSeverity;
    private List<String> cweIds;
    private BigDecimal cvssScore;
    private long createdAt;
    private long updatedAt;

    public Builder setUuid(String uuid) {
      this.uuid = uuid;
      return this;
    }

    public Builder setBaseSeverity(ScaSeverity baseSeverity) {
      this.baseSeverity = baseSeverity;
      return this;
    }

    public Builder setCweIds(List<String> cweIds) {
      this.cweIds = cweIds;
      return this;
    }

    public Builder setCvssScore(BigDecimal cvssScore) {
      this.cvssScore = cvssScore;
      return this;
    }

    public Builder setCreatedAt(long createdAt) {
      this.createdAt = createdAt;
      return this;
    }

    public Builder setUpdatedAt(long updatedAt) {
      this.updatedAt = updatedAt;
      return this;
    }

    public ScaVulnerabilityIssueDto build() {
      return new ScaVulnerabilityIssueDto(uuid, baseSeverity, cweIds, cvssScore, createdAt, updatedAt);
    }
  }
}
