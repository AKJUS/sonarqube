<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">
<mapper namespace="org.sonar.db.sca.ScaVulnerabilityIssuesMapper">
    <!-- we're using a resultMap instead of the usual resultType approach in order to provide
       a typeHandler for the cwe_ids column -->
  <resultMap id="scaVulnerabilityIssueResultMap" type="org.sonar.db.sca.ScaVulnerabilityIssueDto">
    <constructor>
      <idArg column="uuid" javaType="String"/>
      <arg column="base_severity" javaType="org.sonar.db.sca.ScaSeverity" jdbcType="VARCHAR"/>
      <arg column="cwe_ids" typeHandler="org.sonar.db.sca.ListOfStringsTypeHandler" jdbcType="VARCHAR"
           javaType="java.util.List"/>
      <arg column="cvss_score" javaType="java.math.BigDecimal"/>
      <!-- the underscore prefix means to use the primitive type instead of boxed type -->
      <arg column="created_at" javaType="_long"/>
      <arg column="updated_at" javaType="_long"/>
    </constructor>
  </resultMap>

  <sql id="scaVulnerabilityIssuesColumns">
    svi.uuid,
    svi.base_severity,
    svi.cwe_ids,
    svi.cvss_score,
    svi.created_at,
    svi.updated_at
  </sql>

  <insert id="insert" parameterType="org.sonar.db.sca.ScaVulnerabilityIssueDto" useGeneratedKeys="false">
    insert into sca_vulnerability_issues (
      uuid,
      base_severity,
      cwe_ids,
      cvss_score,
      created_at,
      updated_at
    ) values (
      #{uuid,jdbcType=VARCHAR},
      #{baseSeverity,jdbcType=VARCHAR},
      #{cweIds,jdbcType=VARCHAR,typeHandler=org.sonar.db.sca.ListOfStringsTypeHandler},
      #{cvssScore,jdbcType=DECIMAL},
      #{createdAt,jdbcType=BIGINT},
      #{updatedAt,jdbcType=BIGINT}
    )
  </insert>

  <!-- delete is left out for now, because it is very dangerous without foreign key constraints and ON DELETE behavior,
       and it hasn't yet been necessary to try to "garbage collect" this table. -->

  <select id="selectByUuid" parameterType="string" resultMap="scaVulnerabilityIssueResultMap">
    select <include refid="scaVulnerabilityIssuesColumns"/>
    from sca_vulnerability_issues svi
    where svi.uuid = #{uuid,jdbcType=VARCHAR}
  </select>

  <select id="selectByUuids" parameterType="string" resultMap="scaVulnerabilityIssueResultMap">
    select <include refid="scaVulnerabilityIssuesColumns"/>
    from sca_vulnerability_issues svi
    <if test="arg0.isEmpty()">
      where 1=0
    </if>
    <if test="!arg0.isEmpty()">
      where svi.uuid in
      <foreach collection="collection" item="uuid" open="(" close=")" separator=",">
        #{uuid, jdbcType=VARCHAR}
      </foreach>
    </if>
  </select>

  <update id="update" parameterType="org.sonar.db.sca.ScaVulnerabilityIssueDto" useGeneratedKeys="false">
    update sca_vulnerability_issues
    set
      uuid = #{uuid, jdbcType=VARCHAR},
      base_severity = #{baseSeverity, jdbcType=VARCHAR},
      cwe_ids = #{cweIds, jdbcType=VARCHAR, typeHandler=org.sonar.db.sca.ListOfStringsTypeHandler},
      cvss_score = #{cvssScore, jdbcType=DECIMAL},
      updated_at = #{updatedAt, jdbcType=BIGINT}
    where
      uuid = #{uuid, jdbcType=VARCHAR}
  </update>
</mapper>
