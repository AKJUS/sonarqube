<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">
<mapper namespace="org.sonar.db.sca.ScaIssuesReleasesMapper">
  <sql id="scaIssuesReleasesColumns">
    sir.uuid as uuid,
    sir.sca_issue_uuid as scaIssueUuid,
    sir.sca_release_uuid as scaReleaseUuid,
    sir.severity as severity,
    sir.created_at as createdAt,
    sir.updated_at as updatedAt
  </sql>

  <insert id="insert" parameterType="org.sonar.db.sca.ScaIssueReleaseDto" useGeneratedKeys="false">
    insert into sca_issues_releases (
      uuid,
      sca_issue_uuid,
      sca_release_uuid,
      severity,
      severity_sort_key,
      created_at,
      updated_at
    ) values (
      #{uuid,jdbcType=VARCHAR},
      #{scaIssueUuid,jdbcType=VARCHAR},
      #{scaReleaseUuid,jdbcType=VARCHAR},
      #{severity,jdbcType=VARCHAR},
      #{severitySortKey,jdbcType=INTEGER},
      #{createdAt,jdbcType=BIGINT},
      #{updatedAt,jdbcType=BIGINT}
    )
  </insert>

  <delete id="deleteByUuid" parameterType="string">
    delete from sca_issues_releases
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>

  <update id="update" parameterType="org.sonar.db.sca.ScaIssueReleaseDto" useGeneratedKeys="false">
    update sca_issues_releases
    set
      sca_issue_uuid = #{scaIssueUuid, jdbcType=VARCHAR},
      sca_release_uuid = #{scaReleaseUuid, jdbcType=VARCHAR},
      severity = #{severity, jdbcType=VARCHAR},
      severity_sort_key = #{severitySortKey, jdbcType=VARCHAR},
      updated_at = #{updatedAt, jdbcType=BIGINT}
    where
      uuid = #{uuid, jdbcType=VARCHAR}
</update>


  <select id="selectByBranchUuid" parameterType="string" resultType="org.sonar.db.sca.ScaIssueReleaseDto">
    select <include refid="scaIssuesReleasesColumns"/>
    from sca_issues_releases sir
    inner join sca_releases sr on sir.sca_release_uuid = sr.uuid
    inner join components c on sr.component_uuid = c.uuid
    where c.branch_uuid = #{branchUuid,jdbcType=VARCHAR}
    order by sir.uuid asc
  </select>
</mapper>
